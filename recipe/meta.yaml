{% set name = "sqlmodel" %}
{% set version = "0.0.21" %}

package:
  name: {{ name|lower }}
  version: {{ version }}

source:
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/sqlmodel-{{ version }}.tar.gz
  sha256: b2034c23d930f66d2091b17a4280a9c23a7ea540a71e7fcf9c746d262f06f74a

build:
  noarch: python
  script: {{ PYTHON }} -m pip install . -vv --no-deps --no-build-isolation
  number: 0

requirements:
  host:
    - python >=3.7
    - pdm-backend
    - pip
  run:
    - python >=3.7
    - sqlalchemy >=2.0.14,<2.1.0
    - pydantic >=1.10.13,<3.0.0

test:
  imports:
    - sqlmodel
  commands:
    - pip check
    # Extract the version of the built package
    - VERSION=$(python -c 'from importlib import metadata; print(metadata.version("sqlmodel"))')
    - echo "sqlmodel version $VERSION"
    # Ensure that version is not 0. (This conditional looks redundant, but YAML thinks
    # that [...] denotes a list.)
    - if [ "0" == "$VERSION" ]; then false; fi
  requires:
    - pip

about:
  home: https://github.com/tiangolo/sqlmodel
  summary: SQL databases in Python, designed for simplicity, compatibility, and robustness.
  doc_url: https://sqlmodel.tiangolo.com/
  license: MIT
  license_file: LICENSE
  description: |
    SQLModel is designed to simplify interacting with SQL databases in FastAPI
     applications, it was created by the same author. It combines SQLAlchemy
     and Pydantic and tries to simplify the code you write as much as possible,
     allowing you to reduce the code duplication to a minimum, but while getting
     the best developer experience possible. SQLModel is, in fact, a thin layer
     on top of Pydantic and SQLAlchemy, carefully designed to be compatible with
     both.

extra:
  recipe-maintainers:
    - tiangolo
    - maresb
    - thewchan
